@page "/v_cliente"
@using AppEmpresa.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<h1>Formulario de Clientes</h1>

@if (getClienteError || iclientes is null)
{
    <p>NO EXISTE API BB</p>
}
else
{

    <form> 
    <label for="lbl_id" class="form-label">ID</label>
    <input @bind="var_idcliente" type="text" class="form-control" placeholder="ID"readonly >

    <label for="lbl_nombres" class="form-label">Nombres</label>
    <input @bind="var_nombres"type="text" class="form-control" placeholder="Ejemplo: Bryan">

    <label for="lbl_apellidos" class="form-label">Apellidos</label>
    <input @bind="var_apellidos"type="text" class="form-control" placeholder="Ejemplo: Recinos">

    <label for="lbl_direccion" class="form-label">Direccion</label>
    <input @bind="var_direccion"type="text" class="form-control" placeholder="Ejemplo: Guatemala Zona 21">

    <label for="lbl_telefono" class="form-label">Telefono</label>
    <input @bind="var_telefono"type="text" class="form-control" placeholder="Ejemplo: 12345678">

    <label for="lbl_fn" class="form-label">Fecha_nacimiento</label>
    <input @bind="var_fn" type="Date" class="form-control">
    <br>
    <button type="button" @onclick = "Crear" class="btn btn-info">CREAR</button>
    <button type="button" class="btn btn-success">MODIFICAR</button>
    <button type="button" class="btn btn-danger">ELIMINAR</button>

    </form>






    <table class="table">

    <tbody>

    <tr>
    <th>Id</th>
    <th>Nombres</th>
    <th>Apellidos</th>
    <th>Direccion</th>
    <th>Telefono</th>
    <th>Fecha_nacimiento</th>

    </tr>
    </tbody>
        @foreach (var cliente in iclientes)
        {
            <tr>
            <td>@cliente.Id</td>
            <td>@cliente.Nombres</td>
            <td>@cliente.Apellidos</td>
            <td>@cliente.Direccion</td>
            <td>@cliente.Telefono</td>
            <td>@cliente.Fecha_nacimiento</td>
            </tr>



        }
    </table>
}

@code {

    private string? url = "http://localhost:5274/api/Clientes";
    private Int32 var_idcliente;
    private String? var_nombres, var_apellidos, var_direccion, var_telefono;
    private DateTime var_fn;

// CREAR 

    private async Task Crear()
    {
        var client = ClientFactory.CreateClient();
        var addItem = new Cliente { Id = var_idcliente, Nombres=var_nombres, Apellidos = var_apellidos, Direccion = var_direccion, Telefono = var_telefono, Fecha_nacimiento = var_fn };
        await client.PostAsJsonAsync(url, addItem);
        await OnInitializedAsync();
    }

    private IEnumerable<Cliente>? iclientes = Array.Empty<Cliente>();
    private bool getClienteError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;




// LEER 
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            url);
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            iclientes = await JsonSerializer.DeserializeAsync
                <IEnumerable<Cliente>>(responseStream);
        }
        else
        {
            getClienteError = true;
        }

        shouldRender = true;
    }

}